<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>FedLLM-Bench笔记</title>
    <link href="/2025/03/16/study3/"/>
    <url>/2025/03/16/study3/</url>
    
    <content type="html"><![CDATA[<h1>FedLLM-Bench</h1><p>包含四个自然分割的数据集。FedLLM-Bench 涵盖了各种任务、规模、语言、质量、数量、长度和偏好，反映了现实场景的复杂性和多样性。</p><h2 id="训练方法">训练方法</h2><ul><li>指令微调<ul><li>每个数据样本是一个指令-相应对其中LLMs通过监督微调训练以遵循指令生成预期的响应。</li></ul></li><li>偏好对齐<ul><li>每个数据样本包括一个指令、一个首选响应和一个不首选响应，其中LLMs通过直接偏好优化训练以与用户指令给出的首选响应保持一致。</li></ul></li></ul><h2 id="评估指标">评估指标</h2><p>考虑了一个领域内评估指标，称为 Ref-GPT4，其中我们随机抽取 50 个未见过的数据作为测试集，并使用 GPT-4 以参考真实响应作为基准来评估生成的响应</p><h1>联邦学习基线方法</h1><p>联邦学习的**基线方法（Baseline Methods）**通常指在该领域中被广泛认可、作为基准用于对比新算法性能的经典或基础方法。这些方法帮助研究者验证新算法的有效性，并衡量其在隐私、效率、模型性能等方面的提升。以下是联邦学习中常见的基线方法及其核心原理：</p><h2 id="FedAvg-（联邦平均，Federated-Averaging）">FedAvg （联邦平均，Federated Averaging）</h2><p>原理：<br>各客户端在本地用私有数据训练模型若干轮（epoch），将模型参数（而非原始数据）上传至服务器，服务器对所有参数进行加权平均（权重通常由客户端数据量决定），得到全局模型并下发给客户端进行下一轮训练。</p><h2 id="FedSGD（联邦随机梯度下降）">FedSGD（联邦随机梯度下降）</h2><p>原理：<br>客户端每轮仅执行一次梯度计算（即单次本地训练），将梯度上传至服务器，服务器聚合梯度后更新全局模型。</p><h2 id="Non-IID-数据场景">Non-IID 数据场景</h2><ul><li><p>FedProx：<br>在客户端本地目标函数中增加正则化项，约束本地模型与全局模型的差异，缓解 Non-IID 数据导致的模型漂移。</p></li><li><p>SCAFFOLD：<br>通过控制客户端和服务器端的梯度偏移（Variance Reduction）解决 Non-IID 问题。</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>FedAMoLE笔记</title>
    <link href="/2025/03/13/study2/"/>
    <url>/2025/03/13/study2/</url>
    
    <content type="html"><![CDATA[<h2 id="LLM-大语言模型">LLM 大语言模型</h2><p>大语言模型（LLM） 是一种基于深度学习的人工智能模型，专注于理解和生成人类语言。它通过分析海量文本数据，学习语言的统计规律、语法结构和语义关系，从而能够执行多种语言任务，例如回答问题、生成文本、翻译语言等。</p><h3 id="技术原理">技术原理</h3><p>LLM的核心是Transformer架构，其关键组件包括：</p><ul><li>自注意力机制（Self-Attention）：计算词与词之间的相关性，捕捉全局依赖。</li><li>位置编码（Positional Encoding）：为输入序列添加位置信息。</li><li>多头注意力（Multi-Head Attention）：并行学习不同子空间的语义关系。</li></ul><h2 id="LoRA-（Low-Rank-Adaptation）">LoRA （Low-Rank Adaptation）</h2><p>LoRA（低秩自适应）是一种用于高效微调大型预训练模型的技术。其核心思想是：在微调过程中，仅通过低秩矩阵（low-rank matrices）来近似模型参数的变化，从而显著减少需要训练的参数量和计算资源，同时保持模型性能。</p><h3 id="技术原理-2">技术原理</h3><ol><li><p>分解<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>W</mi><mo>=</mo><mi>B</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\Delta W = B  A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">A</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>d</mi><mo>×</mo><mi>r</mi></mrow></msup><mo separator="true">,</mo><mi>A</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>r</mi><mo>×</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">B \in R^{d \times r},A \in R^{r \times k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0435em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>&lt;</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>d</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r &lt; min(d,k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></p></li><li><p>仅需更新B和A</p></li><li><p>原来参数量是d x k，现在是 r x (d + k)</p></li></ol><h2 id="PFL">PFL</h2><p>个性化联邦学习（PFL） 是 联邦学习（Federated Learning, FL） 的扩展，旨在解决传统联邦学习中因客户端数据分布差异（Non-IID）导致的模型性能下降问题。其目标是通过协作训练，为每个客户端（用户或设备）生成个性化模型，既能利用全局数据共性，又能适应本地数据特性。</p><h2 id="Transformer">Transformer</h2><ol><li>输入处理层</li></ol><ul><li>词嵌入（Embedding）<ul><li>功能：将离散的单词（或子词）映射为连续向量。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>e</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mi>E</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mrow><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mo>∈</mo><msup><mi>R</mi><mrow><mi>B</mi><mo>×</mo><mi>L</mi><mo>×</mo><msub><mi>d</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow></msup></mrow><annotation encoding="application/x-tex">X_{embed} = Embedding(X_{input}) \in R^{B \times L \times d_{model}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">mb</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">mb</span><span class="mord mathnormal">e</span><span class="mord mathnormal">dd</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">L</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><ul><li>B : batch size</li><li>L : 序列长度</li><li>d model：模型维度</li></ul></li></ul></li><li>位置编码（Positional Encoding）<ul><li>功能：为序列中的每个位置生成唯一编码，弥补Transformer缺乏时序感知的缺陷。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right left right" columnspacing="0em 1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><msub><mi>E</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mo separator="true">,</mo><mn>2</mn><mi>i</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>sin</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow><msup><mn>10000</mn><mrow><mn>2</mn><mi>i</mi><mi mathvariant="normal">/</mi><msub><mi>d</mi><mtext>model</mtext></msub></mrow></msup></mfrac><mo fence="true">)</mo></mrow><mi>P</mi><msub><mi>E</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>o</mi><mi>s</mi><mo separator="true">,</mo><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>=</mo><mi>cos</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><mi>p</mi><mi>o</mi><mi>s</mi></mrow><msup><mn>10000</mn><mrow><mn>2</mn><mi>i</mi><mi mathvariant="normal">/</mi><msub><mi>d</mi><mtext>model</mtext></msub></mrow></msup></mfrac><mo fence="true">)</mo></mrow><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}PE_{(pos, 2i)} &amp;= \sin\left(\frac{pos}{10000^{2i/d_{\text{model}}}}\right)PE_{(pos, 2i+1)} &amp;= \cos\left(\frac{pos}{10000^{2i/d_{\text{model}}}}\right).\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.154em;vertical-align:-0.827em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.327em;"><span style="top:-3.327em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">os</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.827em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.327em;"><span style="top:-3.327em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1000</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">model</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">os</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.704em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">os</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.827em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.327em;"><span style="top:-3.327em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1000</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">model</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">os</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.704em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.827em;"><span></span></span></span></span></span></span></span></span></span></span><ul><li>pos: 单词在序列中的位置 0-L-1</li><li>i: 特征维度的索引(0- dmodel/2 -1)</li><li>PE: 位置编码矩阵</li></ul></li></ul></li></ul><ol start="2"><li>编码器层（Encoder Layer）<br>每个编码器层由 多头自注意力（Multi-Head Self-Attention） 和 前馈网络（Feed-Forward Network） 组成，均包含残差连接和层归一化。</li></ol><ul><li><p>多头自注意力（Multi-Head Self-Attention）</p><ul><li>功能：捕捉序列中任意两个词之间的依赖关系。</li><li>$ \begin{aligned} Q_i &amp;= X W_i^Q, \quad K_i = X W_i^K, \quad V_i = X W_i^V \quad (i=1,\dots,h) \end{aligned}$</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mtext>head</mtext><mi>i</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mtext>Attention</mtext><mo stretchy="false">(</mo><msub><mi>Q</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>K</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\text{head}_i &amp;= \text{Attention}(Q_i, K_i, V_i) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5em;vertical-align:-0.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1em;"><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">head</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1em;"><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord">Attention</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5em;"><span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>MultiHead</mtext><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mtext>Concat</mtext><mo stretchy="false">(</mo><msub><mtext>head</mtext><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mtext>head</mtext><mi>h</mi></msub><mo stretchy="false">)</mo><msup><mi>W</mi><mi>O</mi></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\text{MultiHead}(Q, K, V) &amp;= \text{Concat}(\text{head}_1, \dots, \text{head}_h) W^O \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5513em;vertical-align:-0.5257em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0257em;"><span style="top:-3.1343em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">MultiHead</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5257em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0257em;"><span style="top:-3.1343em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord">Concat</span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">head</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord">head</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5257em;"><span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p>残差连接与层归一化</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mtext>attn</mtext></msub><mo>=</mo><mtext>LayerNorm</mtext><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mtext>Dropout</mtext><mo stretchy="false">(</mo><mtext>MultiHead</mtext><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X_{\text{attn}} = \text{LayerNorm}(X + \text{Dropout}(\text{MultiHead}(X)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">attn</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">LayerNorm</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">Dropout</span></span><span class="mopen">(</span><span class="mord text"><span class="mord">MultiHead</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)))</span></span></span></span><ul><li>Dropout: 随机置零操作，防止过拟合</li><li>LayerNorm: 层归一化</li></ul></li></ul></li><li><p>前馈网络（Feed-Forward Network）</p><ul><li>功能：对每个位置的表示进行非线性变换。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>FFN</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>ReLU</mtext><mo stretchy="false">(</mo><mi>x</mi><msub><mi>W</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>W</mi><mn>2</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\text{FFN}(x) = \text{ReLU}(x W_1 + b_1) W_2 + b_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">FFN</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">ReLU</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li></ul><ol start="3"><li>解码器层（Decoder Layer）<br>解码器层包含 掩码多头自注意力、编码器-解码器注意力 和 前馈网络，同样使用残差连接。</li></ol><ul><li>掩码自注意力（Masked Self-Attention）<ul><li>功能：防止解码器在训练时“偷看”未来信息。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>Mask</mtext><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>j</mi><mo>≤</mo><mi>i</mi><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>otherwise</mtext><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\text{Mask}(i,j) =\begin{cases}0 &amp; \text{if } j \leq i, \\-\infty &amp; \text{otherwise}.\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">Mask</span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">otherwise</span></span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul></li><li>编码器-解码器注意力（Cross-Attention）<ul><li>将编码器的输出（Key, Value）与解码器的当前状态（Query）对齐。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>CrossAttention</mtext><mo stretchy="false">(</mo><msub><mi>Q</mi><mtext>dec</mtext></msub><mo separator="true">,</mo><msub><mi>K</mi><mtext>enc</mtext></msub><mo separator="true">,</mo><msub><mi>V</mi><mtext>enc</mtext></msub><mo stretchy="false">)</mo><mo>=</mo><mtext>softmax</mtext><mrow><mo fence="true">(</mo><mfrac><mrow><msub><mi>Q</mi><mtext>dec</mtext></msub><msubsup><mi>K</mi><mtext>enc</mtext><mi mathvariant="normal">⊤</mi></msubsup></mrow><msqrt><msub><mi>d</mi><mi>k</mi></msub></msqrt></mfrac><mo fence="true">)</mo></mrow><msub><mi>V</mi><mtext>enc</mtext></msub></mrow><annotation encoding="application/x-tex">\text{CrossAttention}(Q_{\text{dec}}, K_{\text{enc}}, V_{\text{enc}}) = \text{softmax}\left(\frac{Q_{\text{dec}} K_{\text{enc}}^\top}{\sqrt{d_k}}\right) V_{\text{enc}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">CrossAttention</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">dec</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">enc</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">enc</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8091em;vertical-align:-0.65em;"></span><span class="mord text"><span class="mord">softmax</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1591em;"><span style="top:-2.5864em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8622em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1778em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">dec</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.927em;"><span style="top:-2.214em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">enc</span></span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">enc</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li></ul><ol start="4"><li>输出层</li></ol><ul><li><p>功能：将解码器输出映射回词表空间，生成概率分布。</p></li><li><p>层归一化（LayerNorm）</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LayerNorm</mtext><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>γ</mi><mo>⋅</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>μ</mi></mrow><msqrt><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>+</mo><mi>ϵ</mi></mrow></msqrt></mfrac><mo>+</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\text{LayerNorm}(x) = \gamma \cdot \frac{x - \mu}{\sqrt{\sigma^2 + \epsilon}} + \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">LayerNorm</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3924em;vertical-align:-0.538em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8544em;"><span style="top:-2.5445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9221em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">ϵ</span></span></span><span style="top:-2.8821em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1179em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></li><li>μ: 特征维度上的均值</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">σ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>: 特征维度上的方差</li><li>γ,β: 可学习的缩放和平移参数</li><li>ϵ: 防止除零的小常数</li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>FedMoE-DA笔记</title>
    <link href="/2025/03/12/study1/"/>
    <url>/2025/03/12/study1/</url>
    
    <content type="html"><![CDATA[<h1>FedMoE-DA: Federated Mixture of Experts via Domain Aware Fine-grained Aggregation</h1><h2 id="Background">Background</h2><h2 id="1-MoE">1.MoE</h2><h3 id="Introduction">Introduction</h3><p>Mixture of Experts (MoE) 是一种神经网络架构设计，其核心思想是通过动态分配计算资源来提高模型的效率和扩展性。它的核心特点是稀疏激活（Sparse Activation），即对于每个输入样本，只有部分子网络（称为“专家”）被激活并参与计算，而非整个网络。这种设计在减少计算量和通信开销的同时，允许模型规模大幅扩展。</p><h3 id="MoE-的核心组成">MoE 的核心组成</h3><ol><li><p>专家（Experts）<br>每个“专家”是一个独立的子网络（例如全连接层、Transformer模块等），负责处理特定类型的输入或任务。多个专家并行存在，形成专家池。</p></li><li><p>门控机制（Gating Network）<br>一个可学习的路由网络，根据输入数据动态决定哪些专家被激活。例如，门控网络可能为每个输入选择Top-K 个最相关的专家（通常 K=1 或 2），而其他专家保持非激活状态。</p></li></ol><h3 id="MoE-的工作原理">MoE 的工作原理</h3><ul><li>输入分配：对于每个输入样本，门控网络计算各专家的权重（如通过 softmax），选择权重最高的 K 个专家。</li><li>稀疏计算：仅被选中的 K 个专家对输入进行计算，其他专家不参与。</li><li>结果整合：被激活专家的输出按权重加权求和，得到最终结果。</li></ul><h2 id="2-FL">2.FL</h2><h3 id="Introduction-2">Introduction</h3><p>联邦学习（Federated Learning, FL） 是一种分布式机器学习技术，其核心思想是：在保证数据隐私和安全的前提下，允许多个参与方（如移动设备、企业、医院）协作训练共享的全局模型，而无需将原始数据集中到中心服务器。简而言之，“数据不动，模型动”。</p><h3 id="核心原理">核心原理</h3><ol><li>数据去中心化<br>参与方的原始数据始终存储在本地，不离开设备或机构，避免隐私泄露风险。</li></ol><ul><li>例如：医院 A 和医院 B 合作训练疾病预测模型，但各自的患者数据不共享。</li></ul><ol start="2"><li>模型协同训练</li></ol><ul><li>本地训练：每个参与方用自己的数据训练本地模型。</li><li>参数聚合：中心服务器收集各方的模型参数（如梯度、权重），聚合后更新全局模型。</li><li>模型下发：将更新后的全局模型分发给各参与方，开始下一轮训练。</li></ul><h2 id="3-Softmax究竟是什么？">3. Softmax究竟是什么？</h2><h3 id="Introduction-3">Introduction</h3><p>Softmax 是一种常用的激活函数，主要用于将一组实数转换为概率分布，广泛应用于多分类问题的神经网络输出层。</p><h3 id="功能与公式">功能与公式</h3><p>Softmax 将神经网络的原始输出（logits）转换为概率分布：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mtext>Softmax</mtext><mo stretchy="false">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mi>i</mi></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msup><mi>e</mi><msub><mi>z</mi><mi>j</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">p_i = \text{Softmax}(z_i) = \frac{e^{z_i}}{\sum_{j=1}^K e^{z_j}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">Softmax</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6484em;vertical-align:-1.307em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3414em;"><span style="top:-2.1288em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6065em;"><span style="top:-3.0051em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.307em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中：</p><ul><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="bold">z</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>z</mi><mi>K</mi></msub><mo stretchy="false">]</mo><mtext>：输入向量（</mtext><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>t</mi><mi>s</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">\mathbf{z} = [z_1, z_2, ..., z_K] ：输入向量（logits）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord mathbf">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord cjk_fallback">：输入向量（</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord cjk_fallback">）</span></span></span></span></span></p></li><li><p>$p_i ：第 i 类的预测概率 $</p></li><li><p>K ：类别总数</p></li></ul><h2 id="正文">正文</h2><ul><li><p>解决问题</p><ul><li>1.每个客户端都需要使用门控网络和本地数据来剪枝效果较差的专家，这引入了额外的计算。</li><li>2.专家在整个系统中共享，客户端只能从这些共享模型中选择，这在一定程度上限制了模型个性化。</li></ul></li><li><p>一些符号</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G_i(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 对于G(x)第i维度的值，代表第i个专家对于x的适应程度<ul><li>G(x)衡量了每个专家与输入 x 的相关性</li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_i(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 第i个专家对于输入x的值</li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络笔记</title>
    <link href="/2025/03/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <url>/2025/03/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
    
    <content type="html"><![CDATA[<p><a id="top"></a></p><h1><strong>Overview</strong></h1><p><strong><a href="https://book.systemsapproach.org/foundation/requirements.html">https://book.systemsapproach.org/foundation/requirements.html</a></strong></p><ul><li><a href="#lec-1-introduction-1">Lec-1 Introduction 1</a></li><li><a href="#lec-2-introduction-2">Lec-2 Introduction 2</a></li><li><a href="#lec-3-physical-layer">Lec-3 Physical Layer</a></li><li><a href="#lec-4-framing-and-error-detection">Lec-4 Framing and Error Detection</a></li><li><a href="#lec-5-ack">Lec-5 ACK</a></li><li><a href="#lec-6-mac-medium-access-control-1">Lec-6 MAC (Medium Access Control 1)</a></li><li><a href="#lec-7-medium-access-control-2">Lec-7 Medium Access Control 2</a></li><li><a href="#lec-8-%E4%BA%A4%E6%8D%A2%E6%9C%BA-switching">Lec-8 交换机 Switching</a></li><li><a href="#lec-9-internet-protocol-ip%E5%8D%8F%E8%AE%AE">Lec-9 Internet Protocol（IP协议）</a></li><li><a href="#lec-10-rip-and-ospf">Lec-10 RIP and OSPF</a></li><li><a href="#lec-11-bgp">Lec-11 BGP</a></li><li><a href="#lec-12-other-topics-in-ip-layer">Lec-12 Other Topics in IP Layer</a></li><li><a href="#lec-13-sdn">Lec-13 SDN</a></li><li><a href="#lec-14-mobile-routing">Lec-14 Mobile Routing</a></li><li><a href="#lec-15-tcp-1">Lec-15 TCP 1</a></li><li><a href="#lec-16-tcp-2">Lec-16 TCP 2</a></li><li><a href="#lec-17-congestion-control-1">Lec-17 Congestion Control 1</a></li><li><a href="#lec-18-congestion-control-2">Lec-18 Congestion Control 2</a></li><li><a href="#lec-19-other-topics-in-transportation-layer">Lec-19 Other Topics in Transportation Layer</a></li><li><a href="#lec-20-rtp-and-rpc">Lec-20 RTP and RPC</a></li><li><a href="#lec-21-data-compression">Lec-21 Data Compression</a></li><li><a href="#lec-22-dns">Lec-22 DNS</a></li><li><a href="#lec-23-email--web">Lec-23 Email &amp; Web</a></li><li><a href="#lec-24-ftp--p2p">Lec-24 FTP &amp; P2P</a></li><li><a href="#lec-25-network-security">Lec-25 Network Security</a></li></ul> <div STYLE="page-break-after: always;"></div><h1>Lec-1 Intorduction 1</h1><ul><li><p><strong>网络，通信，协议</strong></p><ul><li>网络 ： 网络是用物理链路将工作站或主机相连在一起，组成数据链路，从而达到资源共享和通信的目的。</li><li>通信 ： 交换数据</li><li>协议 ： 规则</li></ul></li><li><p><strong>网络分层模型</strong></p><ul><li>OSI七层模型 ：<ul><li>应用层（application）：HTTP,DCTP,FTP,NFS,WAIS,TFTP</li><li>表示层（presentation）:<br>Telnet,Rlogin,SNMP,Gopher</li><li>会话层（Session）: SMTP,DNS</li><li>传输层（transport）: TCP,UDP</li><li>网络层（Network）: IP,ICMP,ARP,RARP,AKP,UUCP</li><li>数据链路层（Data link）: 以太网，帧中继，PPP，IEEE802.3</li><li>物理层（Physical）：RS-232，RS-449,V35,X21</li></ul></li></ul></li></ul><p><strong>You may want to learn more: <a href="https://zhuanlan.zhihu.com/p/380119935">https://zhuanlan.zhihu.com/p/380119935</a></strong></p><ul><li>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-104928-dt-content-rid-9434103_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%201.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-104928-dt-content-rid-9434103_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 1.pdf</a></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-2 Introduction 2</h1><ul><li><p><strong>带宽（Bandwidth）(Throughput)</strong></p><ul><li><p>Defnition :  是指在单位时间内（一般指的是1秒钟）能传输的数据量。(The bandwidth of a network is given by the number of bits that can be transmitted over the network in a certain period of time.)</p></li><li><p>(单位)Unit : <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>p</mi><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mi>p</mi><mi>b</mi><mi>s</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mn>3</mn></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>M</mi><mi>p</mi><mi>s</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mn>6</mn></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>G</mi><mi>b</mi><mi>p</mi><mi>s</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mn>9</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">bps, kpbs(10^3),Mps(10^6),Gbps(10^9)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">b</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Mp</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">b</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li><li><p>e.g. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mi>M</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">100Mps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">100</span><span class="mord mathnormal">Mp</span><span class="mord mathnormal">s</span></span></span></span> Ethernet Link means takes <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>100</mn><mo>∗</mo><msup><mn>10</mn><mn>6</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{100*10^6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">100</span><span class="mbin mtight">∗</span><span class="mord mtight">1</span><span class="mord mtight"><span class="mord mtight">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> seconds to transmit one bit.</p></li></ul></li><li><p><strong>延迟（Latency）（Delay）</strong></p><ul><li><p><strong>Definition ：The latency of a network is the time that takes a bit to travel from one end of a network to the other.</strong></p></li><li><p>Unit : <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo separator="true">,</mo><mi>m</mi><mi>s</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>u</mi><mi>s</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mrow><mo>−</mo><mn>6</mn></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>n</mi><mi>s</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mrow><mo>−</mo><mn>9</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s,ms(10^{-3}),us(10^{-6}),ns(10^{-9})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">9</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li><li><p>Round-Trip Time(RTT) : 2x(Propagation Delay(传播延迟) + Queueing Delay(拥塞延迟))<br><strong><a href="https://blog.csdn.net/solihawk/article/details/129248379">https://blog.csdn.net/solihawk/article/details/129248379</a></strong></p></li><li><p>计算：</p><ul><li><strong>Latency = Transmit Delay + Propagation Delay + Queueing Delay</strong></li><li>Transmit Delay = TransferSize/Bandwidth</li><li>Propagation Delay = Distance/SpeedofSigna</li><li>Effective Bandwidth（有效带宽也叫吞吐量） = TransferSize/Latency</li></ul></li></ul></li><li><p>带宽越大，延迟一定越低吗？带宽越小，延迟一定比带宽大的高吗？</p></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-106871-dt-content-rid-9440965_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%202.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-106871-dt-content-rid-9440965_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 2.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-3 Physical Layer</h1><ul><li><p>Transmission Method:</p><ul><li>基带传输(Baseband Transimission)<ul><li>No carrier wave,transimit bits or coded stream directly to the medium,might not be long distance.</li><li>e.g. usb,Ethernet,HDMI</li><li>Symbol Rate := Baud Rate(波特率)<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>b</mi></msub><mo>=</mo><msub><mi>R</mi><mi>B</mi></msub><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>M</mi></mrow><annotation encoding="application/x-tex">R_b = R_Blog_2M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></li><li>M : the number of different symbols</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">R_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> : Baud Rate</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">R_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> : bit Rate</li></ul></li><li>Clock Recovery<ul><li>Synchronous Transmission<ul><li>Transimit the clock directly</li><li>low processing</li></ul></li><li>Asychronous Transmission<ul><li>Recover the clock from data signal</li><li>Use line encoder/decoder, high efficiency</li></ul></li></ul></li></ul></li><li>频带传输(Passband Modulation)<ul><li>Good transmission properties.</li><li>Multiplexing</li></ul></li></ul></li><li><p>极限在哪里？（Upper Bound of Throughput）</p><ul><li><strong>Shannon-Hartley Theorem</strong> ： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mi>B</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mfrac><mi>S</mi><mi>N</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C = Blog_2(1+\frac{S}{N})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Bl</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><ul><li>C : cahnnel capacity</li><li>B : Bandwidth</li><li>S : Signal Power</li><li>N : Noise Power</li></ul></li></ul></li><li><p>歧义(discrimination) ：Bandwidth</p><ul><li>Rate ： throughput (bps)</li><li>Spectrum ：the width of the occupied spectrum(Hz)</li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-107292-dt-content-rid-9449960_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%203.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-107292-dt-content-rid-9449960_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 3.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-4  Framing and Error Detection</h1><ul><li><p>Quantifying Error</p><ul><li>Shannon capacity gives a thoughput upper bound:<ul><li>Actual throughput <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mo>&lt;</mo></mrow><annotation encoding="application/x-tex">&lt;&lt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;&lt;</span></span></span></span> chnnel capacity</li></ul></li><li>Bit error rate(BER) : Error bits/transmitted bits</li></ul></li><li><p>Handling Error</p><ul><li>错误检测(Error detection)<ul><li><p>奇偶检验(Parity Check)</p><ul><li>偶校验：保证“1”的个数为偶数</li><li>奇校验：保证“1”的个数为奇数</li><li>2D奇偶校验：添加一个纵向校验(包括校验位)</li></ul></li><li><p>和检测(Checksum)</p><ul><li>选择区域内除“和”以外的数值相加，检测是否等于“和”(使用 one’s complement)</li></ul></li><li><p><strong>Cyclic Redundancy Check(CRC)</strong></p><ul><li>定义： Generator？Message？Remainder？</li><li>Generator(crc 纠错码，除数)</li><li>Message(信息，被除数)</li><li>Remainder(检验码，余数)</li><li>对比：<ul><li>CRC vs Checksum</li><li>CRC protects more bits</li><li>CRC takes more time/resource</li><li>CRC vs Hash</li><li>CRC does not protect data integration</li><li>Hash functions are more complex than CRC</li></ul></li><li><strong>Learn more :<a href="https://zhuanlan.zhihu.com/p/396165368">https://zhuanlan.zhihu.com/p/396165368</a></strong></li></ul></li></ul></li><li>纠正错误(Error Correction)<ul><li>Hamming code</li><li>others ： convolutional code,fountain code.</li></ul></li></ul></li><li><p>Framing</p><ul><li><p>Multiplexing Approaches :</p><ul><li>Fixed Multiplexing(固定多路复用)<ul><li>STDM，FDM<ul><li>Predictable performance</li><li>Expensive</li></ul></li></ul></li><li>Statistical Multiplexing(统计多路复用)<ul><li>Packet Switching<ul><li>performance is random</li><li>cheap</li></ul></li></ul></li><li><strong><a href="https://zhuanlan.zhihu.com/p/649386693">https://zhuanlan.zhihu.com/p/649386693</a></strong></li></ul></li><li><p>目的 ： 帮助接受方辨别传输的开始和结束</p></li><li><p>设计 ：</p><ul><li>Detection<ul><li>Sential-based</li></ul></li><li>Termination<ul><li>Counting-based</li></ul></li></ul></li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-108025-dt-content-rid-9465031_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%204.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-108025-dt-content-rid-9465031_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 4.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-5 ACK</h1><ul><li><p>停等协议(stop and wait)</p><ul><li>发送方每次只发送一个包，同时启动一个定时器。如果定时器超时依然没有收到这个包的 ACK，则认为丢包，重传这个包。如果收到 ACK，则重置定时器并发送下一个包。</li><li>问题 ： 丢包的判断和传输效率非常低。</li></ul></li><li><p>NACK</p><ul><li>接收方定时把所有未收到的包序号通过反馈报文通知到发送方进行重传。</li><li>改进： 减少的反馈包的频率和带宽占用，同时也能比较及时地通知发送方进行丢包重传。</li><li>缺点 ： 如果帧(frame)丢失发生在发送端空闲后,接收方没有办法注意丢失。</li></ul></li><li><p>滑窗协议(Sliding windows)</p><ul><li>发送方维持着一个一定大小的发送窗口，位于发送窗口内的所有包可以连续发送出去，中途不需要依次等待对方的 ACK 确认。<br>接收方通常采用 <strong>积累确认模式()</strong>，即不必对每一个包逐个发送 ACK，而是在连续收到几个包后，对顺序到达的最后一个包序号发送 ACK，表示：这个包及之前的所有包都已正确收到了。</li><li>Window Size :<ul><li>send window size : pipeline depth<ul><li>Delay x Bandwidth</li></ul></li><li>Receive window size : Flow control</li></ul></li><li>MaxSeqNum(最大序列号)：<ul><li>Receive window size == 1:<ul><li>Maxseqnum <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span> send window size + 1</li></ul></li><li>Send window size == receive window size :<ul><li>Maxseqnum <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span> 2*send window size</li></ul></li></ul></li></ul></li></ul><p><strong>Learn more : <a href="https://zhuanlan.zhihu.com/p/104322256">https://zhuanlan.zhihu.com/p/104322256</a>&gt;</strong></p><ul><li>PPT: <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-108684-dt-content-rid-9505422_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%205%281%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-108684-dt-content-rid-9505422_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 5(1).pdf</a></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-6 MAC(Medium Access Control 1)</h1><ul><li><p>什么是MAC层？</p><ul><li>MAC层是数据链路层的子层之一</li><li>作用：决定多个节点如何共享多路复用资源</li></ul></li><li><p>The Medium access problem</p><ul><li><p>Two types of Physical Links</p><ul><li>Private: point-to-point link between nodes e.g. USB</li><li><strong>Broadcast(广播)</strong>：Shared communication medium,may occur collision e.g.WiFI,Legacy Ethernet</li></ul></li><li><p>处理冲突现有的实现：</p><ul><li>Fixed Partitioning and Assignment(固定分区分配)<ul><li>Avoid collisions e.g. TDMA,FDMA in 4G</li></ul></li><li>Random Access<ul><li>Allow collisions e.g. CSMA</li></ul></li></ul></li></ul></li><li><p>MAC协议</p><ul><li><p>Transmit and Pray：直接发送数据，祈祷数据能够成功到达目标节点</p><ul><li>缺点：高吞吐量会有非常多的冲突</li></ul></li><li><p>Slotted ALOHA：是一种改进版的纯ALOHA协议，旨在提高通信网络的效率。在这个版本中，信道被划分为小的、固定长度的时间槽，用户只能在每个时间槽的开始时发送数据</p></li><li><p>CSMA(Carrier Sense Multiple Access)</p><ul><li><p>Listen before Transmit</p><ul><li>if the channel is sensed idle : transmit the entire frame</li><li>if the cheannel is sensed busy: defer the transmission</li></ul></li><li><p>Collisions can still occur :Due to propagation delay, when collison occurs :entire packet wasted</p></li></ul></li><li><p>CSMA + Collision Detection(CSMA/CD)</p><ul><li><p>keep listening to the channel while transmitting</p></li><li><p>Abort the transition if collision is detected</p><ul><li>Opt1 : transmitted signal != sensed signal</li><li>Opt2 : energy detection</li><li>Then ,retransmit</li></ul></li></ul></li></ul></li><li><p>When collisions occur ?</p><ul><li>Exponential Backoff<ul><li>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mrow><mi>t</mi><mi>h</mi></mrow></msub></mrow><annotation encoding="application/x-tex">m_{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> collisions ,chooses K at random from [0,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>]<ul><li>if m &gt; 11: choose K at random from [0,1024]<ul><li>so why maximum number of nodes is 1024 ?</li></ul></li><li>if m= 16: done, go idle</li></ul></li></ul></li></ul></li></ul><p>-PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-109056-dt-content-rid-9563556_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%206%282%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-109056-dt-content-rid-9563556_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 6(2).pdf</a></p><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-7 Medium Access control 2</h1><ul><li><p>Why not choose CSMA/CA in Wireless Situation?</p><ul><li>Hidden Terminal : A 不能发现影响接收端 B 的信号</li><li>Exposed Terminal ： A 发现了，但是该信号不影响接收端 B</li></ul></li><li><p>RTS/CTS协议</p><ul><li><p>首先，A向B发送RTS信号，表明A要向B发送若干数据，B收到RTS后，向所有基站发出CTS信号，表明已准备就绪，A可以发送，而其余欲向B发送数据的基站则暂停发送；双方在成功交换RTS/CTS信号（即完成握手）后才开始真正的数据传递，保证了多个互不可见的发送站点同时向同一接收站点发送信号时，实际只能是收到接收站点回应CTS的那个站点能够进行发送，避免了冲突发生。即使有冲突发生，也只是在发送RTS时，这种情况下，由于收不到接收站点的CTS消息，大家再回头用DCF提供的竞争机制，分配一个随机退守定时值，等待下一次介质空闲DIFS后竞争发送RTS，直到成功为止。</p></li><li><p>并没有完全解决隐藏和暴露问题</p></li><li><p><strong>see <a href="https://blog.csdn.net/qq_39270587/article/details/124845883">https://blog.csdn.net/qq_39270587/article/details/124845883</a></strong></p></li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-109062-dt-content-rid-9563546_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%207%281%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-109062-dt-content-rid-9563546_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 7(1).pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-8  交换机 Switching</h1><ul><li><p>What is switch ?</p><ul><li>A multi-input,multi-output device<ul><li>Function: transfer packets from an input to one or more outputs</li></ul></li></ul></li><li><p>Forwarding Table</p><ul><li>How to obtain ?<ul><li>forward the frame to all output ports</li></ul></li></ul></li><li><p>Cycles in Ethernet</p><ul><li><p>Why this occurs ?</p><ul><li>On purpose : introduce redundancy</li><li>Not on purpose : wrong network management</li></ul></li><li><p>可能会导致广播风暴(Broadcast storm)</p><ul><li>什么是广播风暴 ？ 是指当广播数据充斥网络无法处理，并占用大量网络带宽，导致正常业务不能运行，甚至彻底瘫痪，这就发生了“广播风暴”。一个数据帧或包被传输到本地网段（由广播域定义）上的每个节点就是广播；由于网络拓扑的设计和连接问题，或其他原因导致广播在网段内大量复制，传播数据帧，导致网络性能下降，甚至网络瘫痪。</li></ul></li><li><p>处理循环</p><ul><li><p>Break the cycles ： Tree</p></li><li><p>Distributed Spanning Tree Algorithm</p><ul><li>A spanning tree is a sub-graph of this graph that covers all the vertices but contains no cycles.Each switch decides the ports over which it is and is not willing to forward frames</li></ul></li></ul></li></ul></li><li><p>交换方法(switching methods)</p><ul><li>Datagram(数据报)<ul><li><strong>should know how to read the forwarding table</strong></li></ul></li><li>Virtual circuit(虚拟链路)<ul><li><strong>should know how to read the Virtual circuit table</strong></li></ul></li><li>Source Routing<ul><li>a set of outport round</li></ul></li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-109804-dt-content-rid-9598509_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%208.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-109804-dt-content-rid-9598509_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 8.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-9 Internet Protocol（IP协议）</h1><ul><li><p>Ip adress</p><ul><li><p>Class addressing</p><ul><li><p>class A : | 0 | 7bits Network | 24bits host | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>24</mn></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2^{24}-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">24</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></p></li><li><p>class B : | 10 | 14bits Network | 16bits host | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>16</mn></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2^{16}-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></p></li><li><p>class C : | 110 | 21bits Network | 8bits host | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2^{8}-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></p></li><li><p>为什么减去 2 ？ 全0(无效)和全1(广播)</p></li><li><p>Each host has a unique IP address，Hosts in the same physical network have the same network part</p></li><li><p>缺点：</p><ul><li>host和address之间的权衡</li><li>Forwarding table 很大</li></ul></li></ul></li><li><p>Subnet Mask(子网掩码)</p><ul><li>创建子网：使得Ip地址变为三层结构：一个网络可以又若干子网，子网下面可以有若干主机</li><li><strong>Learn more ： <a href="https://blog.csdn.net/piggy_0204/article/details/86759924">https://blog.csdn.net/piggy_0204/article/details/86759924</a></strong></li></ul></li><li><p>CIDR（无类别域间路由）</p><ul><li><p>表示方法：a.b.c.d/x</p><ul><li>x为掩码为1的个数，32-x剩下的为主机地址，a.b.c.d代表网络地址</li></ul></li><li><p>using longest prefix matching(最长匹配（掩码长度）)</p></li></ul></li></ul></li><li><p>碎片和重组（Fragmentation and Reassembly）</p><ul><li>Network links have MTU (max.transfer size) ，so Large datagram is divided (“fragmented”) within net</li><li>offset = 前面所有数据和/8</li><li>每一个数据包的大小取MTU中8的最大倍数</li></ul></li><li><p>Router</p><ul><li><p>路由器是一种连接两个或多个网络的硬件设备，可以根据数据包的目的地址选择最佳的传输路径。（Each router contains multiple network interfaces，Each port has the IP address of the connected network）</p></li><li><p>Each host has a default router</p></li><li><p>Routers may also have default router</p></li></ul></li><li><p>DHCP ：<br>-DHCP是动态主机配置协议（Dynamic Host Configuration Protocol）的缩写，它是一种用于在局域网中自动分配IP地址和其他网络参数的协议。DHCP可以简化网络管理和维护，提高IP地址的利用率，避免地址冲突和配置错误。DHCP的工作原理是，当一个客户端需要连接网络时，它会向DHCP服务器发送一个请求报文，DHCP服务器会从一个地址池中选择一个合适的IP地址，以及相应的子网掩码、网关、DNS等信息，发送给客户端。客户端收到后，就可以使用这些信息与网络通信。DHCP还可以为客户端提供租约期限，即分配的IP地址的有效时间，客户端可以在租约到期前向服务器请求续约，或者在不需要使用时释放地址。</p></li><li><p>ARP :</p><ul><li><p>概念 ： ARP（地址解析协议）是一种通信协议，用于将网络地址，如IP地址，映射到物理地址，如MAC地址。它是TCP/IP协议套件的一个重要组成部分，它使局域网（LAN）上的设备能够相互通信。</p></li><li><p>工作原理 ： 一个设备需要发送数据包给另一个设备时，它会先查看自己的ARP缓存表，看是否有目的IP地址对应的MAC地址。如果有，就直接使用该MAC地址进行数据传输。如果没有，就向本地网络广播一个ARP请求报文，询问谁拥有目的IP地址，并等待ARP应答报文。收到应答报文后，发送方会将目的IP地址和MAC地址的映射关系存入自己的ARP缓存表，并使用该MAC地址进行数据传输。</p></li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-109996-dt-content-rid-9622123_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%209.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-109996-dt-content-rid-9622123_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 9.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-10 RIP and OSPF</h1><ul><li><p>RIP协议</p><ul><li>Use distance vector algorith<ul><li>Distance Vector Algorithm<ul><li>Every T seconds each router sends its table to its neighbor</li><li>Each router then updates its table based on the new information</li></ul></li></ul></li><li>记录下一跳（next hop）</li></ul></li><li><p>OSPF协议</p><ul><li>Link state routing<ul><li>Based on <strong>Dijkstra’s algorithm</strong>：computes shortest paths from one node<br>(source) to all other nodes</li><li>&lt;Destionation,Cost,Nexthop&gt;,每次选择cost最小的加入confirmed队列，之后更新Tentative队列，比较相同destination的cost，保留小的cost。</li></ul></li></ul></li><li><p>PPT ： <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-110337-dt-content-rid-9691314_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2010%281%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-110337-dt-content-rid-9691314_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 10(1).pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-11 BGP</h1><ul><li>和RIP，OSPF一样都是Routing protocols</li><li>routing algorithm：<ul><li>target on Reachability</li><li>Avoid loops</li></ul></li><li>Routing Element : AS<ul><li>AS:在一个实体管辖下的拥有相同选路策略的 IP 网络</li></ul></li><li>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-111877-dt-content-rid-9873718_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2011.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-111877-dt-content-rid-9873718_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 11.pdf</a></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-12 Other Topics in IP Layer</h1><ul><li><p>IPv6</p><ul><li>互联网协议的第六版，是用于替代IPv4的下一代协议。IPv6的主要优势是提供了更多的地址空间，可以支持更多的网络设备和应用。IPv6还改进了一些其他方面，如安全性、可扩展性、路由效率等。IPv6的地址长度为128位，采用十六进制表示，可以分为网络前缀和主机地址两部分。</li></ul></li><li><p>NAT( Network Address Translatio)</p><ul><li>NAT是网络地址转换的缩写，它是一种将私有网络地址（如局域网内部地址）转换为公共网络地址（如互联网地址）的技术。NAT可以实现多台计算机共享一个公网IP地址访问互联网，从而缓解IPv4地址短缺的问题。</li></ul></li><li><p>Router implementation</p><ul><li>Shared Bus/Memory<ul><li>Datagram from input port to output port via a shared bus</li></ul></li><li>Crossbar<ul><li>A crossbar switch is a matrix of pathways that can be configured to connect any input port to any output port</li></ul></li><li>Self-routing: 0 up 1 down<ul><li>Banyan Network</li></ul></li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-110563-dt-content-rid-9691771_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2012.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-110563-dt-content-rid-9691771_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 12.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-13 SDN</h1><ul><li><p>SDN是软件定义网络（Software-defined Networking）的缩写，它是一种网络管理方法，它支持动态可编程的网络配置，提高了网络性能和管理效率，使网络服务能够像云计算一样提供灵活的定制能力。SDN将网络设备的转发面与控制面解耦，通过控制器负责网络设备的管理、网络业务的编排和业务流量的调度，具有成本低、集中管理、灵活调度等优点。SDN的架构可分为基础设施层、控制层和应用层，它们之间通过开放的API进行通信。</p></li><li><p>PPT: <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-111370-dt-content-rid-9805632_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2013.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-111370-dt-content-rid-9805632_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 13.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-14 Mobile Routing</h1><ul><li><p>Mobile IP</p><ul><li><p>Mobile IP is designed to provide seamless network connectivity under<br>mobile situation where subnetwork changes may occur</p></li><li><p>Home address</p><ul><li>Home of the mobile host</li><li>Goal : A sending host can find the mobile host through its home address</li></ul></li><li><p>How sending ?</p><ul><li>From mobile host to sending host : direct send packets<ul><li>src IP : home addrss</li></ul></li><li>From sending host to mobile host :<ul><li>step 1:  Packets from sending host to mobile host are routed to home network</li><li>step 2: Home agent redirects packets for mobile host to the foreign agent</li><li>step 3:  Foreign agent recognizes and delivers packets for the mobile host</li></ul></li></ul></li></ul></li><li><p>Mobility Handling in Cellular Network</p><ul><li><p>Home network : 您订阅的移动电话提供商的网络</p><ul><li>home location register (HLR):家庭网络中的数据库，其中包含永久手机号码、个人资料信息（服务、偏好、账单）、当前位置信息（可能在另一个网络中）</li></ul></li><li><p>Foreign network (Visited) : 移动电话目前所在的网络（其他城市的提供商或不同的提供商）</p><ul><li>visitor location register (VLR) :数据库中包含当前网络中每个用户的条目</li><li>could be a home network</li></ul></li><li><p>GSM(全球移动通信系统（Global System for Mobile Communications）)</p><ul><li><p>GSM是一种数字移动通信标准，采用时分多址（TDMA）和频分多址（FDMA）技术，将一个载波频率的时间分成8个时隙，每个时隙对应一个信道，从而实现多个用户同时使用一个载波频率。</p></li><li><p>GSM的系统结构主要由移动台（MS）、基站子系统（BSS）、移动网子系统（NSS）和操作维护中心（OMC）四部分组成。</p><ul><li>移动台（MS）是GSM系统的终端设备，包括手机、平板电脑等。它由移动终端（ME）和用户身份识别卡（SIM）两部分组成。移动终端（ME）主要完成语音信号的处理和无线收发等功能。用户身份识别卡（SIM）存储了用户的身份信息和安全信息，用于认证和授权用户访问GSM网络。</li><li>基站子系统（BSS）是GSM系统中与无线蜂窝方面关系最直接的基本组成部分。它通过无线接口直接与移动台相接，负责无线信号的收发和交换。基站子系统（BSS）主要包括基站控制器（BSC）和基站收发信台（BTS）两个部分。基站控制器（BSC）位于移动交换中心（MSC）与基站收发信台（BTS）之间，具有对一个或者多个基站收发信台（BTS）进行控制和管理的功能，主要完成无线信道的分配、发射功率的控制以及越区信道切换等功能。基站收发信台（BTS）是基站子系统的无线收发设备，由基站控制器（BSC）控制，主要负责无线传输功能，完成无线与有线的转换、无线分集、无线信道加密、跳频等功能。</li><li>移动网子系统（NSS）主要完成交换功能以及用户数据管理、移动性管理、安全性管理所需要的数据库功能。移动网子系统（NSS）主要包括移动交换中心（MSC）、归属位置寄存器（HLR）、访问位置寄存器（VLR）、网关移动交换中心（GMSC）、设备识别寄存器（EIR）和鉴权中心（AUC）等部分。移动交换中心（MSC）是GSM系统的核心，完成最基本的交换功能，即完成移动用户和其他网络用户之间的通讯连接；完成移动用户寻呼接入、信道分配、呼叫接续、话务量控制、计费、基站管理等功能；提供面向系统其他功能实体的接口、到其他网络的接口以及与其他移动交换中心（MSC）互联的接口。归属位置寄存器（HLR）存储了GSM用户的签约数据和状态信息，包括用户的位置信息、呼叫记录等。访问位置寄存器（VLR）存储了访问位置信息、用户状态信息等，并与移动交换中心（MSC）配合完成对用户的接续和路由。网关移动交换中心（GMSC）负责GSM网络与外部网络之间的互连互通，如固定电话、互联网等。设备识别寄存器（EIR）存储了GSM用户的设备信息，如国际移动设备识别码（IMEI）等。鉴权中心（AUC）负责对GSM用户进行鉴权和加密，保障用户的通信安全。</li><li>操作维护中心（OMC）需完成许多任务，包括移动用户管理、移动设备管理以及网路操作和维护。</li></ul></li></ul></li></ul></li><li><p>Routing in Mobile Ad Hoc Network (MANET)</p><ul><li>MANET 是什么？<ul><li>MANET是移动自组织网络的缩写，也被称为无线自组织网络或Adhoc无线网络，它是一种不需要依赖现有固定通信网络基础设施的、能够迅速展开使用的网络体系，所需人工干预最少，是没有任何中心实体、自组织、自愈的网络。1它由一群移动设备组成，这些设备通过无线链接彼此通信。随着网络拓扑结构的频繁变化，MANET节点可以自由随机移动。</li></ul></li></ul></li><li><p>PPT ： <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-111086-dt-content-rid-9758266_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2014%281%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-111086-dt-content-rid-9758266_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 14(1).pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-15 TCP 1</h1><ul><li><p>UDP</p><ul><li>什么是UDP？一种简单的传输层协议<ul><li>UDP不需要建立连接，可以直接发送数据。</li><li>UDP不保证数据的可靠性，可能会出现丢包、重复、乱序等问题。</li><li>UDP不进行流量控制和拥塞控制，发送速度不受网络状况的影响。</li><li>UDP的首部只有8个字节，开销较小。</li><li>UDP适用于实时性要求高、容忍一定数据丢失的应用，如视频、音频、游戏等。</li></ul></li></ul></li><li><p>TCP</p><ul><li><p>一些结构介绍</p><ul><li>seq（序号）：TCP连接字节流中每一个字节都会有一个编号，而本字段的值指的是本报文段所发送数据部分第一个字节的序号。</li><li>ack（确认号）：表示期望收到的下一个报文段数据部分的第一个字节的编号，编号为ack-1及以前的字节已经收到。</li><li>SYN：当本字段为1时，表示这是一个连接请求或者连接接受报文</li><li>ACK：仅当本字段为1时，确认号才有效。</li><li>FIN：用来释放一个连接。当本字段为1时，表示此报文段的发送端数据已发送完毕，要求释放运输连接。</li></ul></li><li><p>Before started ：</p><ul><li>Active participant is client(客户端) 发送方</li><li>Passive participant is server(服务端) 接收方</li></ul></li><li><p>建立连接（Connection Establishment）</p><ul><li>三次握手（three way handshake）<ul><li><p>第一次握手：客户端的应用进程主动打开，并向服务端发出请求报文段。其首部中：SYN=1,seq=x。</p></li><li><p>第二次握手：服务器应用进程被动打开。若同意客户端的请求，则发回确认报文，其首部中：SYN=1,ACK=1,ack=x+1,seq=y。</p></li><li><p>客户端收到确认报文之后，通知上层应用进程连接已建立，并向服务器发出确认报文，其首部：ACK=1,ack=y+1。当服务器收到客户端的确认报文之后，也通知其上层应用进程连接已建立。</p></li><li><p>why not two?</p><ul><li>To eliminate out-of-order connection request</li><li>To confirm the client knows the server is ready</li></ul></li></ul></li></ul></li><li><p>连接中断(Connection Termination)</p><ul><li>四次握手(Four-way Handshake)<ul><li><p>第一次挥手：数据传输结束以后，客户端的应用进程发出连接释放报文段，并停止发送数据，其首部：FIN=1,seq=u。</p></li><li><p>第二次挥手：服务器端收到连接释放报文段之后，发出确认报文，其首部：ack=u+1,seq=v。此时本次连接就进入了半关闭状态，客户端不再向服务器发送数据。而服务器端仍会继续发送。</p></li><li><p>第三次挥手：若服务器已经没有要向客户端发送的数据，其应用进程就通知服务器释放TCP连接。这个阶段服务器所发出的最后一个报文的首部应为：FIN=1,ACK=1,seq=w,ack=u+1。</p></li><li><p>第四次挥手：客户端收到连接释放报文段之后，必须发出确认：ACK=1,seq=u+1,ack=w+1。 再经过2MSL(最长报文端寿命)后，本次TCP连接真正结束，通信双方完成了他们的告别。</p></li><li><p>为什么客户端（发送方）一定要有一个等待时间？</p><ul><li>因为接收方必须要收到最后一个ACK才能进入CLOSED状态，而接收方则不必等待，因为发送方不必须收到ACK，再收到来自接收方的FIN的时候仍然可以进入下一个阶段。</li></ul></li></ul></li></ul></li><li><p><strong>Learn more ： <a href="https://zhuanlan.zhihu.com/p/24860403">https://zhuanlan.zhihu.com/p/24860403</a></strong></p></li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-111923-dt-content-rid-9882478_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2015%20-%20tcp1.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-111923-dt-content-rid-9882478_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 15 - tcp1.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-16 TCP 2</h1><ul><li><p>TCP是如何工作的？、</p><ul><li>核心算法 ： Sliding window</li></ul></li><li><p>Sliding window (滑动窗口)</p><ul><li><p>Send buffer</p><ul><li><p>Cannot ack a byte that has not been sent ： LastByteAcked <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> LastByteSent</p></li><li><p>Cannot send a byte that has not been written : LastByteSent <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> LastByteWritten</p></li></ul></li><li><p>Receive buffer</p><ul><li><p>A byte can be read if it is received and all preceeding byters are received : LastByteRead <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo></mrow><annotation encoding="application/x-tex">&lt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span></span></span></span> NextByteExpected</p></li><li><p>NextByteExpected <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> LastByteRcvd(最后一个收到的字节) + 1</p></li></ul></li><li><p>Flow Control</p><ul><li><p>AdvertisedWindow = max receiver buffer - (next byter expected - 1 - last byte read)</p><ul><li>Indicate the amount of free space available in the receive buffer</li></ul></li><li><p>last byte sent – last byte ACKed <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> AdvertisedWindow</p><ul><li>Sender must adhere to AdvertisedWindow from the receiver</li></ul></li><li><p>Silly Window Syndrome</p><ul><li>UsableWindow= AdvertisedWindow - BytesInFlight</li></ul></li></ul></li></ul></li><li><p>Nagle’s Algorithm</p><ul><li>如果有未收到的ACK的数据，就把小包数据攒起来，直到收到ACK或者满了就发出去</li></ul></li><li><p>Adaptive Timeout</p><ul><li>Jacobson/Karels Algorithm<ul><li>Difference = SampleRTT − EstimatedRTT</li><li>$ EstimatedRTT = EstimatedRTT + (δ*Difference)$</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>e</mi><mi>v</mi><mi>i</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mi>D</mi><mi>e</mi><mi>v</mi><mi>i</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>+</mo><mi>δ</mi><mo>∗</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>D</mi><mi>i</mi><mi>f</mi><mi>f</mi><mi>e</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mi mathvariant="normal">∣</mi><mo>−</mo><mi>D</mi><mi>e</mi><mi>v</mi><mi>i</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Deviation = Deviation + δ*(|Difference| − Deviation)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">ia</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">ia</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal">ere</span><span class="mord mathnormal">n</span><span class="mord mathnormal">ce</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">ia</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">δ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span> is typically set to <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>8</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>i</mi><mi>m</mi><mi>e</mi><mi>O</mi><mi>u</mi><mi>t</mi><mo>=</mo><mi>μ</mi><mo>∗</mo><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>+</mo><mi>φ</mi><mo>∗</mo><mi>D</mi><mi>e</mi><mi>v</mi><mi>i</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">TimeOut = μ * EstimatedRTT + φ * Deviation</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">im</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ima</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">ia</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span></span></span></span><ul><li>$ μ$ is typically set to 1 and $φ $ is set to 4</li></ul></li></ul></li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-112074-dt-content-rid-10093170_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2016%20-%20tcp2%282%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-112074-dt-content-rid-10093170_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 16 - tcp2(2).pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-17 Congestiuon Control 1</h1><ul><li><p>拥塞发生的预示</p><ul><li>丢包</li><li>网络延迟</li></ul></li><li><p>方法</p><ul><li><p>AIMD(Additive Increase/Multiplicative Decrease)</p><ul><li>成功收到最后一个窗口的ACK ：  cwnd= cwnd+1<ul><li>Increment = 1/cwnd</li><li>cwnd += Increment</li></ul></li><li>如果丢包 ：  cwnd= cwnd/2</li></ul></li><li><p>Slow strat</p><ul><li>不比 Additive Increase 慢</li><li>只要收到ACK ： cwnd= cwnd+1（相当于x2每次）</li></ul></li><li><p>Fast retransmission ：</p><ul><li>用重复的ACK（一般3个）来预示丢包</li><li>Receiver replies every TCP segment with acknum= next byte expected</li></ul></li><li><p>Fast Recovery</p><ul><li>No need to start from window size 1</li><li>Instead, reset CWND to CWND/2</li></ul></li></ul></li><li><p>PPT ： <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-112338-dt-content-rid-9947482_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2017%20-%20congestion%20control%201.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-112338-dt-content-rid-9947482_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 17 - congestion control 1.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-18 Congestion Control 2</h1><ul><li><p>Vegas Algorithm</p><ul><li><p>Vegas首先重新设计了RTT的计算方式，当前时间和时间戳相减，然后用RTT来决定重传。当收到重复的ACK时，Vegas检查当前时间和相关段记录的时间戳之间的差值是否大于超时值。如果是，那么Vegas不需要等待3个重复的ACK就可以重传这个片段。</p></li><li><p>Expect Rate :  CongestionWindow/BaseRTT</p></li><li><p>ActualRate : ActualRate=CongestionWindow/ActualRTT</p></li><li><p>如果</p><ul><li>$ ExpectRate- ActualRate &lt; α$ :<ul><li>cwnd++</li></ul></li><li>$ α &lt;ExpectRate- ActualRate &lt; β$  :<ul><li>cwnd = cwnd</li></ul></li><li>$ β &lt;ExpectRate- ActualRate $ :<ul><li>cwnd–</li></ul></li></ul></li></ul></li><li><p>Congestion Control in Routers</p><ul><li><p>Queuing Discipline</p><ul><li><p>FIFO(First-In-First-Out)</p></li><li><p>First-In-First-Out (FIFO) with<br>Priority</p></li><li><p>Fair Queuing</p><ul><li>Round Robin</li></ul></li><li><p>Weighted Fair Queuing</p></li><li><p>Bit-Level Fair Queuing</p><ul><li>Schedule according to earliest finish time</li></ul></li></ul></li><li><p>DECbit</p><ul><li><p>这种策略的目标是通过在数据包中添加一个比特来显式地通知发送方网络的拥塞状态，从而使发送方能够调整其数据传输速率以避免网络拥塞</p></li><li><p>If &lt; 50% of last window’s packets had bit set：</p><ul><li>cwnd++</li></ul></li><li><p>If &gt; 50% of last window’s packets had bit set：</p><ul><li>cwnd*0.875</li></ul></li></ul></li><li><p><strong>Red Algorithm</strong></p><ul><li><p>Compute Average Queue Length:</p><ul><li>AvgLen = (1 - Weight) * AvgLen + Weight * SampleLen</li></ul></li><li><p>if AvgLen &lt;= MinThreshold</p><ul><li>等待数据包</li></ul></li><li><p>if MinThreshold &lt; AvgLen &lt; MaxThreshold</p><ul><li>Drop arriving packet with probability P</li></ul></li><li><p>if MaxThreshold &lt;= AvgLen then drop arriving packet</p></li><li><p>Computing probability P</p><ul><li>TempP = MaxP* (AvgLen- MinThreshold)/(MaxThreshold-MinThreshold)</li><li>P = TempP/(1 - count * TempP)</li></ul></li></ul></li></ul></li><li><p>PPT： <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-112565-dt-content-rid-9972365_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2018%20-%20congestion%20control%202.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-112565-dt-content-rid-9972365_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 18 - congestion control 2.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-19 Other Topics in Transportation Layer</h1><ul><li><p>TCP Fairness</p><ul><li><p>Fairness Index : <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>…</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mo>∑</mo><msub><mi>x</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mi>n</mi><mo>∗</mo><mo>∑</mo><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mfrac></mrow><annotation encoding="application/x-tex">f(x_1 \dots x_n) = \frac{(\sum x_i)^2}{n*\sum x_i^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7081em;vertical-align:-0.5992em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1089em;"><span style="top:-2.6264em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">∗</span><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5992em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>Why choose AIMD ?</p></li></ul></li><li><p>QUIC :<br>是一种新的网络协议，最初由Google设计，用于改善使用TCP的连接导向Web应用程序的性能。QUIC通过使用用户数据报协议（UDP）在两个端点之间建立多路复用连接，从而实现这一目标。</p><ul><li>Always encrypted</li><li>0-RTT connection establishment</li><li>Connection migration</li><li>Congestion control</li><li>Parallel Streams</li></ul></li><li><p>QoS(Quality of Service)</p><ul><li>是一种网络技术，它能够利用各种基础技术，为指定的网络通信提供更好的服务能力。QoS是用来解决网络延迟和阻塞等问题的一种技术1。在有限的带宽资源下，QoS为各种业务分配带宽，为业务提供端到端的服务质量保证。例如，语音、视频和重要的数据应用在网络设备中可以通过配置QoS优先得到服务。</li></ul></li><li><p>Token bucket</p><ul><li>paraments:<ul><li>r : average rate</li><li>b : bucket of depth(limits size of burst)</li><li>R : Maximum link capacity of peak rate</li><li>video <a href="https://zhuanlan.zhihu.com/p/39031921">https://zhuanlan.zhihu.com/p/39031921</a></li></ul></li></ul></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-112861-dt-content-rid-10018820_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2019%20-%20other%20transport%20topics.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-112861-dt-content-rid-10018820_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 19 - other transport topics.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-20 RTP and RPC</h1><ul><li><p>RTP :实时传输协议）是一个网络传输协议，它被设计用于通过组播或单播网络服务传输实时数据，如音频、视频或仿真数据。RTP详细说明了在互联网上传递音频和视频的标准数据包格式。它一开始被设计为一个多播协议，但后来被用在很多单播应用中.</p></li><li><p>RPC : （Remote Procedure Call，远程过程调用）是一种网络通信协议，它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而无需程序员显式编码这个远程调用的细节。RPC的主要功能目标是让构建分布式计算（应用）更容易，在提供强大的远程调用能力时不损失本地调用的语义简洁性。</p></li><li><p>PPT: <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-113091-dt-content-rid-10056554_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2020%20-%20rpc%20and%20rtp.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-113091-dt-content-rid-10056554_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 20 - rpc and rtp.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-21 Data compression</h1><ul><li><p>Data presentation</p><ul><li>主要介绍了不同格式的文件传输不兼容的问题如何解决</li></ul></li><li><p>Lossless compression</p><ul><li><p>gzip</p><ul><li>一种类Unix系统上的文件压缩和解压缩的软件。由GNU计划实现</li><li>广泛使用的无损压缩方法</li><li>主要算法<ul><li>LZ Algorithm</li><li>Huffman Coding</li></ul></li></ul></li><li><p>Run Length Encoding</p><ul><li>想法：替换重复的字符串并用一个计数器表示</li><li>例子 ： AAABBCDDDD =&gt; 3A2B1C4D</li></ul></li><li><p>LZ Algorithm</p><ul><li><p>LZ77</p><ul><li>（最长匹配，开始匹配位置（从指针往前数！），下一个字符）</li><li>click here : <a href="https://www.bilibili.com/video/BV1wP4y1Z7eD/?spm_id_from=333.337.search-card.all.click&amp;vd_source=7a8c6998d1ecddaa3ecec172aaa0036b">https://www.bilibili.com/video/BV1wP4y1Z7eD/?spm_id_from=333.337.search-card.all.click&amp;vd_source=7a8c6998d1ecddaa3ecec172aaa0036b</a></li><li>Learn more : <a href="https://www.cnblogs.com/junyuhuang/p/4138376.html">https://www.cnblogs.com/junyuhuang/p/4138376.html</a></li></ul></li><li><p>LZ78</p><ul><li>(匹配的字典序号,下一字符)</li><li>Learn more ：<a href="https://www.cnblogs.com/aeexiaoqiang/p/6529375.html">https://www.cnblogs.com/aeexiaoqiang/p/6529375.html</a></li></ul></li><li><p>Huffman coding</p><ul><li>ideas : 高频短表达</li><li>e.g.: A:90%, B:5%, C:5% so A: 1 B :01 C :00</li><li>你应该确保连续的01可以被特定识别</li></ul></li></ul></li></ul></li><li><p>Multimedia Compression</p><ul><li><p>JPEG ： 图像压缩技术</p><ul><li>Splitting</li><li>RGB to YUV<ul><li>Y 亮度（luminance）</li><li>U，V 色度（chrominance）</li></ul></li><li>DCT：convert an 8x8 block into a bunch of 8x8 cosine waves</li><li>and so on</li></ul></li><li><p>MPEG : 影像压缩技术</p></li><li><p>MP3 ： 音频压缩技术</p></li></ul></li><li><p>PPT ： <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-113370-dt-content-rid-10098495_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2021%20-%20data%20compression%281%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-113370-dt-content-rid-10098495_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 21 - data compression(1).pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-22 DNS</h1><ul><li><p>什么是DNS？</p><ul><li>DNS（Domain Name System，域名系统）是因特网的一项服务，它作为域名和IP地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。</li></ul></li><li><p>DNS cache</p><ul><li>Once (any) name server learns mapping, it caches mapping</li><li>DNS Caching Exists in Every Place of the Hierarchy</li></ul></li><li><p>实例：How to Reach <a href="http://shanghaitech.edu.cn">shanghaitech.edu.cn</a>?</p><ul><li>Check local cache (assume DNS miss) to find IP of <a href="http://shanghaitech.edu.cn">shanghaitech.edu.cn</a></li><li>Check local DNS server to find IP of <a href="http://shanghaitech.edu.cn">shanghaitech.edu.cn</a></li><li>Local DNS server resolves IP of <a href="http://shanghaitech.edu.cn">shanghaitech.edu.cn</a></li><li>Connect to the IP of <a href="http://shanghaitech.edu.cn">shanghaitech.edu.cn</a></li></ul></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-23 Email &amp; Web</h1><ul><li>PPT ： <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-114003-dt-content-rid-10172198_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2023%20-%20email%20%26%20web%281%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-114003-dt-content-rid-10172198_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 23 - email %26 web(1).pdf</a></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-24 FTP &amp; P2P</h1><ul><li><p>FTP (File Transfer Protocol)</p></li><li><p>P2P (peer to peer)</p><ul><li><strong>BitTorrent</strong><ul><li>首先一个人作为资源发布者创建种子，之后其他下载的人也作为服务器提供下载，也就是说下的人越多下载越快。</li></ul></li></ul></li><li><p>There is also other you should know (PPT)： <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-114121-dt-content-rid-10209547_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2024%20-%20ftp%20%26%20p2p%282%29.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-114121-dt-content-rid-10209547_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 24 - ftp %26 p2p(2).pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul><h1>Lec-25 Network Security</h1><ul><li><p>may replenish later</p></li><li><p>PPT : <a href="https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-114489-dt-content-rid-10269749_1/courses/CS120-100796-4579-2023-20241/CS120%20Lec%2025%20-%20security.pdf">https://elearning.shanghaitech.edu.cn:8443/bbcswebdav/pid-114489-dt-content-rid-10269749_1/courses/CS120-100796-4579-2023-20241/CS120 Lec 25 - security.pdf</a></p></li></ul><ul><li><a href="#top">Back to top</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
